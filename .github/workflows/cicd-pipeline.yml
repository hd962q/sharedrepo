name: Node.js CI/CD Pipeline

on:
  push:
    branches: [ "**" ] # Run on pushes to all branches

jobs:
  test:
    name: Test on Node.js ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20]

    steps:
      - name: 1. Check out repository code
        uses: actions/checkout@v4

      - name: 2. Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: 3. Install dependencies
        run: |
          npm install jest jest-circus
          npm install

      - name: 4. Run tests
        run: npx jest

  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' # Only run this job for pushes to the main branch

    steps:
      - name: 1. Check out repository code
        uses: actions/checkout@v4

      - name: 2. Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 3. Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}

      - name: 4. Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.ref == 'refs/heads/main' # Only run this job for pushes to the main branch
    environment: production # Use the protected environment

    steps:
      - name: 1. Simulate deployment
        run: echo "ðŸš€ Deploying to production..."